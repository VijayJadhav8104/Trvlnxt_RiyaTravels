          
 -- [dbo].[Proc_GetRBTReport] 324,0,'2024-07-01','2024-07-30'                  
CREATE PROCEDURE [dbo].[Proc_GetRBTReport_Backup12072024]                  
@AgentId int = 0 ,                                            
@MainAgentId int = 0,                                        
@FromDate varchar(100)='',                                        
@ToDate varchar(100)=''                        
AS                   
BEGIN                   
 IF @ToDate IN ('',NULL)                   
  SET @ToDate = DATEADD(DAY,1,@FromDate)                                                                                                
 ELSE                                   
  SET @ToDate = DATEADD(DAY,1,@ToDate)                     
  ---- Voucher Condition--            
  select      
  DISTINCT  HB.BookingReference AS RIYAPNR,    
'Hotel' as ProductType,          
MAG.GroupName as GroupName,           
case WHEN HAT.AttributeId=1 then HAT.AttributesValue else ''  END as TripID,                     
B2B.AgencyName as CorporateName,                
'Corporate' as CorporateType,                
'' as CorporateID,                
HB.PassengerEmail as EmployeeEmailID,                
HB.PassengerPhone as EmployeeMobileNo,                
case WHEN HAT.AttributeId=2 then HAT.AttributesValue else ''  END as EmployeeCode,                
case WHEN HAT.AttributeId=3 then HAT.AttributesValue else ''  END as TravellerType,                
case WHEN HAT.AttributeId=4 then HAT.AttributesValue else ''  END as BookingType,                
HB.LeaderTitle as Title,                
HB.LeaderFirstName as FirstName,                
HB.LeaderLastName as LastName,                
HM.status AS Status,                  
case WHEN HAT.AttributeId=5 then HAT.AttributesValue else ''  END as BookAppType,                
case WHEN HAT.AttributeId=6 then HAT.AttributesValue else ''  END as StockType,                
HB.B2BPaymentMode as PaymentMode,                
'' as RequestedDate,                
case WHEN HAT.AttributeId=7 then HAT.AttributesValue else ''  END as ApprovedDate,                
HH.CreateDate as BookedDate,                
case WHEN HAT.AttributeId=8 then HAT.AttributesValue else ''  END as ApproveByOREApproverBookedBy,                
case WHEN HAT.AttributeId=9 then HAT.AttributesValue else ''  END as BookedBy,                
HB.BookingCountry as CountryCode,                
'' as 'CountryName',                
--HB.cityName AS CityName,                
HB.HotelName as HotelName,                
ISNULL(HB.HotelAddress1,HB.HotelAddress2) AS 'Accommodation Address',                
HB.HotelIncludes +''+HB.Meal AS Inclusion,                  
HB.CheckInDate AS CheckInDate,                  
HB.CheckOutDate AS CheckOutDate,                
HB.CheckInTime as CheckInTime,                
HB.CheckOutTime AS CheckOutTime,                
HB.SelectedNights AS RoomNight,                
CASE WHEN HB.BookingCountry='IN' THEN 'Domestic' Else 'International' END  AS TravelScope,                
--HB.BookingReference AS RIYAPNR,                
ISNULL(HB.HotelConfNumber,'') as BookingRef,                
ISNULL(HB.providerConfirmationNumber,'') as GDSRef,                
case WHEN HAT.AttributeId=11 then HAT.AttributesValue else ''  END as PassiveSegRef,                
'' AS RateType,                
HB.TotalRoomAmount as BaseFare,                
HB.HotelTaxes as TotalTax,                
0 as Markup,                
HB.AgentCommission as Discount,                
HB.agentCancellationCharges as Penalty,                
0 as CancellationMarkup,                
0 as Breakupoftaxes,                
bc.GSTAmount as GST,                
HB.AgentServiceFee as serviceFee,                
0 as GSTonSF,                
bc.TDSDeductedAmount as TDS,                
ISNULL(B2BMC.TotalCommission,0) as PGCharges,                
0 as GSTonPG,                
HB.agentCancellationCharges as CancelCharges,                
0 as RescheduleCharges,                
HB.STotalRate as NetAmount,                
hb.HotelTotalGross as GrossAmount,   
(cast(HB.DisplayDiscountRate as float) / cast(HB.SelectedNights as float)) as PerNightRate,                
case WHEN HAT.AttributeId=12 then HAT.AttributesValue else ''  END as CappingLimit,                
case WHEN HAT.AttributeId=13 then HAT.AttributesValue else ''  END as  SuggestedLowestRate,                
case WHEN HAT.AttributeId=14 then HAT.AttributesValue else ''  END as L1Hotel,                
case WHEN HAT.AttributeId=15 then HAT.AttributesValue else ''  END as L1Rate,            
case WHEN HAT.AttributeId=16 then HAT.AttributesValue else ''  END as L2Hotel,                
case WHEN HAT.AttributeId=17 then HAT.AttributesValue else ''  END as L2Rate,                
case WHEN HAT.AttributeId=18 then HAT.AttributesValue else ''  END as L3Hotel,                
case WHEN HAT.AttributeId=19 then HAT.AttributesValue else ''  END as L3Rate,                
case           
when  ((ISNULL(HB.TotalRoomAmount,0)) - (isnull(HB.STotalRate,0) * (isnull(HB.ROEValue,0)) ) ) > 0 then ''           
when  ((ISNULL(HB.TotalRoomAmount,0)) - (isnull(HB.STotalRate,0) * (isnull(HB.ROEValue,0)) )) = 0  then 0          
else ((ISNULL(HB.TotalRoomAmount,0)) - (isnull(HB.STotalRate,0) * (isnull(HB.ROEValue,0)) ) )          
end as MissedSavings,                
hb.ROEValue as ROE,                
Isnull(HB.FinalROE,0) as ROECurrency,                
isnull(gst.GstNumber,'') as GSTNo,                
isnull(gst.Address,'') as GSTAddress,                
isnull(gst.EmailId,'') as GSTMailID,                
isnull(gst.MobileNo,'') as GSTPhoneNo,                
--case when HAT.AttributeId=4 Then HAT.AttributesValue Else '' END as CostCentre,             
case WHEN HAT.AttributeId=44 then HAT.AttributesValue else ''  END as CostCentre,            
case WHEN HAT.AttributeId=20 then HAT.AttributesValue else ''  END as DebitCostCenter,                
'' as ComplainceOrNonComplaince,                
'' as TravelPolicies,                
case WHEN HAT.AttributeId=21 then HAT.AttributesValue else ''  END as ReferenceID,                
''  as 'Company code (Non-Billable)',                
'' as Durationoftravel,                
case WHEN HAT.AttributeId=22 then HAT.AttributesValue else ''  END as EmployeeWorkingLocation,                
'' as Natureoftravel,                
'' as ProjectCode,                
case WHEN HAT.AttributeId=23 then HAT.AttributesValue else ''  END as ReasonForNotSelectingLowestPreferredHotel,                
case WHEN HAT.AttributeId=55 then HAT.AttributesValue else ''  END as RequestNo,                
case WHEN HAT.AttributeId=24 then HAT.AttributesValue else ''  END  as SAPCode,                
case WHEN HAT.AttributeId=25 then HAT.AttributesValue else ''  END as LOCATIONCODE,                
case WHEN HAT.AttributeId=26 then HAT.AttributesValue else ''  END as 'FUNCTION',                
case WHEN HAT.AttributeId=27 then HAT.AttributesValue else ''  END as Activity,                
case WHEN HAT.AttributeId=28 then HAT.AttributesValue else ''  END as DEPARTMENT,                
case WHEN HAT.AttributeId=29 then HAT.AttributesValue else ''  END as SubDepartment,                
case WHEN HAT.AttributeId=30 then HAT.AttributesValue else ''  END as JOBBAND,                
case WHEN HAT.AttributeId=31 then HAT.AttributesValue else ''  END as LOCATION,                
case WHEN HAT.AttributeId=32 then HAT.AttributesValue else ''  END as COSTCENTERDESCRIPTION,                
case WHEN HAT.AttributeId=33 then HAT.AttributesValue else ''  END as CITY,                
case WHEN HAT.AttributeId=34 then HAT.AttributesValue else ''  END as DEPARTMENTCODE,                
case WHEN HAT.AttributeId=35 then HAT.AttributesValue else ''  END as SBUCODE,                
case WHEN HAT.AttributeId=36 then HAT.AttributesValue else ''  END as CORPORATE,                
case WHEN HAT.AttributeId=37 then HAT.AttributesValue else ''  END as VERTICALNAME,                
case WHEN HAT.AttributeId=38 then HAT.AttributesValue else ''  END as ZONE,                
case WHEN HAT.AttributeId=39 then HAT.AttributesValue else ''  END as BRANCH,                
case WHEN HAT.AttributeId=40 then HAT.AttributesValue else ''  END as DIVISION,                
case WHEN HAT.AttributeId=41 then HAT.AttributesValue else ''  END as BANDCODE,                
case WHEN HAT.AttributeId=42 then HAT.AttributesValue else ''  END as title,                
'' as COMPANYCODE,          
'' as Changed_Cost_Centre,          
case WHEN HAT.AttributeId=45 then HAT.AttributesValue else ''  END as FUSIONID,                
case WHEN HAT.AttributeId=46 then HAT.AttributesValue else ''  END as BUSINESSUNIT,                
case WHEN HAT.AttributeId=47 then HAT.AttributesValue else ''  END as COSTCODE,                
case WHEN HAT.AttributeId=44 then HAT.AttributesValue else ''  END as COSTCENTER,                
case WHEN HAT.AttributeId=48 then HAT.AttributesValue else ''  END as ENTITYCODE,                
case WHEN HAT.AttributeId=49 then HAT.AttributesValue else ''  END as TRAVELCLASS,                
case WHEN HAT.AttributeId=50 then HAT.AttributesValue else ''  END as GRADE,                
case WHEN HAT.AttributeId=51 then HAT.AttributesValue else ''  END as STATE,                
case WHEN HAT.AttributeId=52 then HAT.AttributesValue else ''  END as TravellerRemarks,                
case WHEN HAT.AttributeId=53 then HAT.AttributesValue else ''  END as ApproverRemarks,                
case WHEN HAT.AttributeId=54 then HAT.AttributesValue else ''  END as BookingRemarks,                
case WHEN HAT.AttributeId=43 then HAT.AttributesValue else ''  END as DESIGNATION              
from Hotel_BookMaster HB   WITH (NOLOCK)             
 join Hotel_Status_History HH on HB.pkId = HH.FKHotelBookingId and  HH.FkStatusId=4            
 join Hotel_Status_Master HM on HH.FkStatusId = HM.Id                                                                                                                       
 left join B2BHotel_Commission BC on BC.Fk_BookId = hb.pkId                                                                             
 left join tblSelfBalance tbs on tbs.BookingRef = HB.orderId and tbs.UserID = HB.MainAgentID                                       
 left join tblAgentBalance tbla on tbla.BookingRef = HB.orderId  and  tbla.AgentNo = HB.RiyaAgentID              
 left join B2BMakepaymentCommission B2BMC on B2BMC.FkBookId=HB.pkId            
 left join B2BRegistration B2B on B2B.FKUserID=HB.RiyaAgentID            
 left join agentLogin AL on AL.UserID=B2B.FKUserID            
 left join mAgentGroup MAG on MAG.Id=AL.GroupId            
 left join Hotel_BookingGSTDetails gst on gst.PKID=HB.pkId or gst.OrderId=HB.orderId            
 left join Hotel_AttributesData HAT on HAT.FKBookId=HB.pkId            
where (HB.RiyaAgentID = @AgentId or (HB.MainAgentID = @MainAgentId and HB.MainAgentID > 0))                                            
  and HB.BookingPortal in('TNH','TNHAPI')                     
  and HB.RiyaAgentID is not null                                                                                                                                               
  and ((Convert(date,HH.CreateDate) >= Convert(date,@FromDate) and Convert(date,HH.CreateDate) < @ToDate) or @FromDate='')                        
            
  Union            
            
  ---- Hold(confirmed) Condition--            
 select       
 DISTINCT  HB.BookingReference AS RIYAPNR,    
'Hotel' as ProductType,          
MAG.GroupName as GroupName,           
case WHEN HAT.AttributeId=1 then HAT.AttributesValue else ''  END as TripID,                     
B2B.AgencyName as CorporateName,                
'Corporate' as CorporateType,                
'' as CorporateID,                
HB.PassengerEmail as EmployeeEmailID,                
HB.PassengerPhone as EmployeeMobileNo,                
case WHEN HAT.AttributeId=2 then HAT.AttributesValue else ''  END as EmployeeCode,                
case WHEN HAT.AttributeId=3 then HAT.AttributesValue else ''  END as TravellerType,                
case WHEN HAT.AttributeId=4 then HAT.AttributesValue else ''  END as BookingType,                
HB.LeaderTitle as Title,                
HB.LeaderFirstName as FirstName,                
HB.LeaderLastName as LastName,                
HM.status AS Status,                  
case WHEN HAT.AttributeId=5 then HAT.AttributesValue else ''  END as BookAppType,        
case WHEN HAT.AttributeId=6 then HAT.AttributesValue else ''  END as StockType,                
HB.B2BPaymentMode as PaymentMode,                
'' as RequestedDate,                
case WHEN HAT.AttributeId=7 then HAT.AttributesValue else ''  END as ApprovedDate,                
HH.CreateDate as BookedDate,                
case WHEN HAT.AttributeId=8 then HAT.AttributesValue else ''  END as ApproveByOREApproverBookedBy,                
case WHEN HAT.AttributeId=9 then HAT.AttributesValue else ''  END as BookedBy,                
HB.BookingCountry as CountryCode,                
'' as 'CountryName',                
--HB.cityName AS CityName,                
HB.HotelName as HotelName,                
ISNULL(HB.HotelAddress1,HB.HotelAddress2) AS 'Accommodation Address',                
HB.HotelIncludes +''+HB.Meal AS Inclusion,                  
HB.CheckInDate AS CheckInDate,                  
HB.CheckOutDate AS CheckOutDate,                
HB.CheckInTime as CheckInTime,                
HB.CheckOutTime AS CheckOutTime,                
HB.SelectedNights AS RoomNight,                
CASE WHEN HB.BookingCountry='IN' THEN 'Domestic' Else 'International' END  AS TravelScope,                
--HB.BookingReference AS RIYAPNR,                
ISNULL(HB.HotelConfNumber,'') as BookingRef,                
ISNULL(HB.providerConfirmationNumber,'') as GDSRef,                
case WHEN HAT.AttributeId=11 then HAT.AttributesValue else ''  END as PassiveSegRef,                
'' AS RateType,                
HB.TotalRoomAmount as BaseFare,                
HB.HotelTaxes as TotalTax,                
0 as Markup,                
HB.AgentCommission as Discount,                
HB.agentCancellationCharges as Penalty,                
0 as CancellationMarkup,                
0 as Breakupoftaxes,                
bc.GSTAmount as GST,                
HB.AgentServiceFee as serviceFee,                
0 as GSTonSF,                
bc.TDSDeductedAmount as TDS,                
ISNULL(B2BMC.TotalCommission,0) as PGCharges,                
0 as GSTonPG,                
HB.agentCancellationCharges as CancelCharges,                
0 as RescheduleCharges,                
HB.STotalRate as NetAmount,                
hb.HotelTotalGross as GrossAmount,                
(cast(HB.DisplayDiscountRate as float) / cast(HB.SelectedNights as float)) as PerNightRate,                
case WHEN HAT.AttributeId=12 then HAT.AttributesValue else ''  END as CappingLimit,                
case WHEN HAT.AttributeId=13 then HAT.AttributesValue else ''  END as  SuggestedLowestRate,                
case WHEN HAT.AttributeId=14 then HAT.AttributesValue else ''  END as L1Hotel,                
case WHEN HAT.AttributeId=15 then HAT.AttributesValue else ''  END as L1Rate,                
case WHEN HAT.AttributeId=16 then HAT.AttributesValue else ''  END as L2Hotel,                
case WHEN HAT.AttributeId=17 then HAT.AttributesValue else ''  END as L2Rate,                
case WHEN HAT.AttributeId=18 then HAT.AttributesValue else ''  END as L3Hotel,                
case WHEN HAT.AttributeId=19 then HAT.AttributesValue else ''  END as L3Rate,                
case           
when  ((ISNULL(HB.TotalRoomAmount,0)) - (isnull(HB.STotalRate,0) * (isnull(HB.ROEValue,0)) ) ) > 0 then ''           
when  ((ISNULL(HB.TotalRoomAmount,0)) - (isnull(HB.STotalRate,0) * (isnull(HB.ROEValue,0)) )) = 0  then 0          
else ((ISNULL(HB.TotalRoomAmount,0)) - (isnull(HB.STotalRate,0) * (isnull(HB.ROEValue,0)) ) )          
end as MissedSavings,                
hb.ROEValue as ROE,                
Isnull(HB.FinalROE,0) as ROECurrency,                
isnull(gst.GstNumber,'') as GSTNo,                
isnull(gst.Address,'') as GSTAddress,                
isnull(gst.EmailId,'') as GSTMailID,                
isnull(gst.MobileNo,'') as GSTPhoneNo,                
--case when HAT.AttributeId=4 Then HAT.AttributesValue Else '' END as CostCentre,             
case WHEN HAT.AttributeId=44 then HAT.AttributesValue else ''  END as CostCentre,            
case WHEN HAT.AttributeId=20 then HAT.AttributesValue else ''  END as DebitCostCenter,                
'' as ComplainceOrNonComplaince,                
'' as TravelPolicies,                
case WHEN HAT.AttributeId=21 then HAT.AttributesValue else ''  END as ReferenceID,                
''  as 'Company code (Non-Billable)',                
'' as Durationoftravel,                
case WHEN HAT.AttributeId=22 then HAT.AttributesValue else ''  END as EmployeeWorkingLocation,                
'' as Natureoftravel,                
'' as ProjectCode,                
case WHEN HAT.AttributeId=23 then HAT.AttributesValue else ''  END as ReasonForNotSelectingLowestPreferredHotel,                
case WHEN HAT.AttributeId=55 then HAT.AttributesValue else ''  END as RequestNo,                
case WHEN HAT.AttributeId=24 then HAT.AttributesValue else ''  END  as SAPCode,                
case WHEN HAT.AttributeId=25 then HAT.AttributesValue else ''  END as LOCATIONCODE,                
case WHEN HAT.AttributeId=26 then HAT.AttributesValue else ''  END as 'FUNCTION',                
case WHEN HAT.AttributeId=27 then HAT.AttributesValue else ''  END as Activity,                
case WHEN HAT.AttributeId=28 then HAT.AttributesValue else ''  END as DEPARTMENT,                
case WHEN HAT.AttributeId=29 then HAT.AttributesValue else ''  END as SubDepartment,                
case WHEN HAT.AttributeId=30 then HAT.AttributesValue else ''  END as JOBBAND,                
case WHEN HAT.AttributeId=31 then HAT.AttributesValue else ''  END as LOCATION,                
case WHEN HAT.AttributeId=32 then HAT.AttributesValue else ''  END as COSTCENTERDESCRIPTION,                
case WHEN HAT.AttributeId=33 then HAT.AttributesValue else ''  END as CITY,                
case WHEN HAT.AttributeId=34 then HAT.AttributesValue else ''  END as DEPARTMENTCODE,                
case WHEN HAT.AttributeId=35 then HAT.AttributesValue else ''  END as SBUCODE,                
case WHEN HAT.AttributeId=36 then HAT.AttributesValue else ''  END as CORPORATE,                
case WHEN HAT.AttributeId=37 then HAT.AttributesValue else ''  END as VERTICALNAME,                
case WHEN HAT.AttributeId=38 then HAT.AttributesValue else ''  END as ZONE,                
case WHEN HAT.AttributeId=39 then HAT.AttributesValue else ''  END as BRANCH,                
case WHEN HAT.AttributeId=40 then HAT.AttributesValue else ''  END as DIVISION,                
case WHEN HAT.AttributeId=41 then HAT.AttributesValue else ''  END as BANDCODE,                
case WHEN HAT.AttributeId=42 then HAT.AttributesValue else ''  END as title,                
'' as COMPANYCODE,          
'' as Changed_Cost_Centre,          
case WHEN HAT.AttributeId=45 then HAT.AttributesValue else ''  END as FUSIONID,                
case WHEN HAT.AttributeId=46 then HAT.AttributesValue else ''  END as BUSINESSUNIT,                
case WHEN HAT.AttributeId=47 then HAT.AttributesValue else ''  END as COSTCODE,                
case WHEN HAT.AttributeId=44 then HAT.AttributesValue else ''  END as COSTCENTER,                
case WHEN HAT.AttributeId=48 then HAT.AttributesValue else ''  END as ENTITYCODE,                
case WHEN HAT.AttributeId=49 then HAT.AttributesValue else ''  END as TRAVELCLASS,                
case WHEN HAT.AttributeId=50 then HAT.AttributesValue else ''  END as GRADE,                
case WHEN HAT.AttributeId=51 then HAT.AttributesValue else ''  END as STATE,                
case WHEN HAT.AttributeId=52 then HAT.AttributesValue else ''  END as TravellerRemarks,                
case WHEN HAT.AttributeId=53 then HAT.AttributesValue else ''  END as ApproverRemarks,                
case WHEN HAT.AttributeId=54 then HAT.AttributesValue else ''  END as BookingRemarks,                
case WHEN HAT.AttributeId=43 then HAT.AttributesValue else ''  END as DESIGNATION            
                
from Hotel_BookMaster HB   WITH(NOLOCK)              
 join Hotel_Status_History HH on HB.pkId = HH.FKHotelBookingId and  HH.FkStatusId=3            
 join Hotel_Status_Master HM on HH.FkStatusId = HM.Id                                                                                                                       
 left join B2BHotel_Commission BC on BC.Fk_BookId = hb.pkId                                                                    
 left join tblSelfBalance tbs on tbs.BookingRef = HB.orderId and tbs.UserID = HB.MainAgentID                                       
 left join tblAgentBalance tbla on tbla.BookingRef = HB.orderId  and  tbla.AgentNo = HB.RiyaAgentID             
 left join B2BMakepaymentCommission B2BMC on B2BMC.FkBookId=HB.pkId            
 left join B2BRegistration B2B on B2B.FKUserID=HB.RiyaAgentID            
 left join agentLogin AL on AL.UserID=B2B.FKUserID            
 left join mAgentGroup MAG on MAG.Id=AL.GroupId            
 left join Hotel_BookingGSTDetails gst on gst.PKID=HB.pkId or gst.OrderId=HB.orderId         left join Hotel_AttributesData HAT on HAT.FKBookId=HB.pkId            
where (HB.RiyaAgentID = @AgentId or (HB.MainAgentID = @MainAgentId and HB.MainAgentID > 0))                                            
  and HB.BookingPortal in('TNH','TNHAPI')                     
  and HB.RiyaAgentID is not null                                                                                                                                               
  and ((Convert(date,HH.CreateDate) >= Convert(date,@FromDate) and Convert(date,HH.CreateDate) < @ToDate) or @FromDate='')              
              
  UNION            
            
  ---- Cancelled Condition--               
  select     
  DISTINCT  HB.BookingReference AS RIYAPNR,    
'Hotel' as ProductType,          
MAG.GroupName as GroupName,           
case WHEN HAT.AttributeId=1 then HAT.AttributesValue else ''  END as TripID,                     
B2B.AgencyName as CorporateName,                
'Corporate' as CorporateType,                
'' as CorporateID,                
HB.PassengerEmail as EmployeeEmailID,                
HB.PassengerPhone as EmployeeMobileNo,                
case WHEN HAT.AttributeId=2 then HAT.AttributesValue else ''  END as EmployeeCode,                
case WHEN HAT.AttributeId=3 then HAT.AttributesValue else ''  END as TravellerType,                
case WHEN HAT.AttributeId=4 then HAT.AttributesValue else ''  END as BookingType,                
HB.LeaderTitle as Title,                
HB.LeaderFirstName as FirstName,                
HB.LeaderLastName as LastName,                
HM.status AS Status,                  
case WHEN HAT.AttributeId=5 then HAT.AttributesValue else ''  END as BookAppType,                
case WHEN HAT.AttributeId=6 then HAT.AttributesValue else ''  END as StockType,                
HB.B2BPaymentMode as PaymentMode,                
'' as RequestedDate,                
case WHEN HAT.AttributeId=7 then HAT.AttributesValue else ''  END as ApprovedDate,                
HH.CreateDate as BookedDate,                
case WHEN HAT.AttributeId=8 then HAT.AttributesValue else ''  END as ApproveByOREApproverBookedBy,                
case WHEN HAT.AttributeId=9 then HAT.AttributesValue else ''  END as BookedBy,                
HB.BookingCountry as CountryCode,                
'' as 'CountryName',                
--HB.cityName AS CityName,                
HB.HotelName as HotelName,                
ISNULL(HB.HotelAddress1,HB.HotelAddress2) AS 'Accommodation Address',                
HB.HotelIncludes +''+HB.Meal AS Inclusion,                  
HB.CheckInDate AS CheckInDate,                  
HB.CheckOutDate AS CheckOutDate,                
HB.CheckInTime as CheckInTime,                
HB.CheckOutTime AS CheckOutTime,                
HB.SelectedNights AS RoomNight,   
CASE WHEN HB.BookingCountry='IN' THEN 'Domestic' Else 'International' END  AS TravelScope,                
--HB.BookingReference AS RIYAPNR,                
ISNULL(HB.HotelConfNumber,'') as BookingRef,                
ISNULL(HB.providerConfirmationNumber,'') as GDSRef,                
case WHEN HAT.AttributeId=11 then HAT.AttributesValue else ''  END as PassiveSegRef,                
'' AS RateType,                
HB.TotalRoomAmount as BaseFare,                
HB.HotelTaxes as TotalTax,                
0 as Markup,                
HB.AgentCommission as Discount,                
HB.agentCancellationCharges as Penalty,                
0 as CancellationMarkup,                
0 as Breakupoftaxes,                
bc.GSTAmount as GST,                
HB.AgentServiceFee as serviceFee,                
0 as GSTonSF,                
bc.TDSDeductedAmount as TDS,                
ISNULL(B2BMC.TotalCommission,0) as PGCharges,                
0 as GSTonPG,                
HB.agentCancellationCharges as CancelCharges,                
0 as RescheduleCharges,                
HB.STotalRate as NetAmount,                
hb.HotelTotalGross as GrossAmount,                
(cast(HB.DisplayDiscountRate as float) / cast(HB.SelectedNights as float)) as PerNightRate,                
case WHEN HAT.AttributeId=12 then HAT.AttributesValue else ''  END as CappingLimit,                
case WHEN HAT.AttributeId=13 then HAT.AttributesValue else ''  END as  SuggestedLowestRate,                
case WHEN HAT.AttributeId=14 then HAT.AttributesValue else ''  END as L1Hotel,              
case WHEN HAT.AttributeId=15 then HAT.AttributesValue else ''  END as L1Rate,                
case WHEN HAT.AttributeId=16 then HAT.AttributesValue else ''  END as L2Hotel,                
case WHEN HAT.AttributeId=17 then HAT.AttributesValue else ''  END as L2Rate,                
case WHEN HAT.AttributeId=18 then HAT.AttributesValue else ''  END as L3Hotel,                
case WHEN HAT.AttributeId=19 then HAT.AttributesValue else ''  END as L3Rate,                
case           
when  ((ISNULL(HB.TotalRoomAmount,0)) - (isnull(HB.STotalRate,0) * (isnull(HB.ROEValue,0)) ) ) > 0 then ''           
when  ((ISNULL(HB.TotalRoomAmount,0)) - (isnull(HB.STotalRate,0) * (isnull(HB.ROEValue,0)) )) = 0  then 0          
else ((ISNULL(HB.TotalRoomAmount,0)) - (isnull(HB.STotalRate,0) * (isnull(HB.ROEValue,0)) ) )          
end as MissedSavings,                
hb.ROEValue as ROE,                
Isnull(HB.FinalROE,0) as ROECurrency,                
isnull(gst.GstNumber,'') as GSTNo,                
isnull(gst.Address,'') as GSTAddress,                
isnull(gst.EmailId,'') as GSTMailID,                
isnull(gst.MobileNo,'') as GSTPhoneNo,                
--case when HAT.AttributeId=4 Then HAT.AttributesValue Else '' END as CostCentre,             
case WHEN HAT.AttributeId=44 then HAT.AttributesValue else ''  END as CostCentre,            
case WHEN HAT.AttributeId=20 then HAT.AttributesValue else ''  END as DebitCostCenter,                
'' as ComplainceOrNonComplaince,                
'' as TravelPolicies,                
case WHEN HAT.AttributeId=21 then HAT.AttributesValue else ''  END as ReferenceID,                
''  as 'Company code (Non-Billable)',                
'' as Durationoftravel,                
case WHEN HAT.AttributeId=22 then HAT.AttributesValue else ''  END as EmployeeWorkingLocation,                
'' as Natureoftravel,                
'' as ProjectCode,                
case WHEN HAT.AttributeId=23 then HAT.AttributesValue else ''  END as ReasonForNotSelectingLowestPreferredHotel,                
case WHEN HAT.AttributeId=55 then HAT.AttributesValue else ''  END as RequestNo,                
case WHEN HAT.AttributeId=24 then HAT.AttributesValue else ''  END  as SAPCode,                
case WHEN HAT.AttributeId=25 then HAT.AttributesValue else ''  END as LOCATIONCODE,                
case WHEN HAT.AttributeId=26 then HAT.AttributesValue else ''  END as 'FUNCTION',                
case WHEN HAT.AttributeId=27 then HAT.AttributesValue else ''  END as Activity,                
case WHEN HAT.AttributeId=28 then HAT.AttributesValue else ''  END as DEPARTMENT,                
case WHEN HAT.AttributeId=29 then HAT.AttributesValue else ''  END as SubDepartment,                
case WHEN HAT.AttributeId=30 then HAT.AttributesValue else ''  END as JOBBAND,                
case WHEN HAT.AttributeId=31 then HAT.AttributesValue else ''  END as LOCATION,                
case WHEN HAT.AttributeId=32 then HAT.AttributesValue else ''  END as COSTCENTERDESCRIPTION,                
case WHEN HAT.AttributeId=33 then HAT.AttributesValue else ''  END as CITY,                
case WHEN HAT.AttributeId=34 then HAT.AttributesValue else ''  END as DEPARTMENTCODE,                
case WHEN HAT.AttributeId=35 then HAT.AttributesValue else ''  END as SBUCODE,                
case WHEN HAT.AttributeId=36 then HAT.AttributesValue else ''  END as CORPORATE,                
case WHEN HAT.AttributeId=37 then HAT.AttributesValue else ''  END as VERTICALNAME,                
case WHEN HAT.AttributeId=38 then HAT.AttributesValue else ''  END as ZONE,                
case WHEN HAT.AttributeId=39 then HAT.AttributesValue else ''  END as BRANCH,                
case WHEN HAT.AttributeId=40 then HAT.AttributesValue else ''  END as DIVISION,                
case WHEN HAT.AttributeId=41 then HAT.AttributesValue else ''  END as BANDCODE,                
case WHEN HAT.AttributeId=42 then HAT.AttributesValue else ''  END as title,                
'' as COMPANYCODE,          
'' as Changed_Cost_Centre,          
case WHEN HAT.AttributeId=45 then HAT.AttributesValue else ''  END as FUSIONID,                
case WHEN HAT.AttributeId=46 then HAT.AttributesValue else ''  END as BUSINESSUNIT,           
case WHEN HAT.AttributeId=47 then HAT.AttributesValue else ''  END as COSTCODE,                
case WHEN HAT.AttributeId=44 then HAT.AttributesValue else ''  END as COSTCENTER,                
case WHEN HAT.AttributeId=48 then HAT.AttributesValue else ''  END as ENTITYCODE,                
case WHEN HAT.AttributeId=49 then HAT.AttributesValue else ''  END as TRAVELCLASS,                
case WHEN HAT.AttributeId=50 then HAT.AttributesValue else ''  END as GRADE,                
case WHEN HAT.AttributeId=51 then HAT.AttributesValue else ''  END as STATE,                
case WHEN HAT.AttributeId=52 then HAT.AttributesValue else ''  END as TravellerRemarks,                
case WHEN HAT.AttributeId=53 then HAT.AttributesValue else ''  END as ApproverRemarks,                
case WHEN HAT.AttributeId=54 then HAT.AttributesValue else ''  END as BookingRemarks,                
case WHEN HAT.AttributeId=43 then HAT.AttributesValue else ''  END as DESIGNATION            
                
from Hotel_BookMaster HB   WITH (NOLOCK)              
 join Hotel_Status_History HH on HB.pkId = HH.FKHotelBookingId and  HH.FkStatusId=7            
 join Hotel_Status_Master HM on HH.FkStatusId = HM.Id                                                                                                                       
 left join B2BHotel_Commission BC on BC.Fk_BookId = hb.pkId                                                                             
 left join tblSelfBalance tbs on tbs.BookingRef = HB.orderId and tbs.UserID = HB.MainAgentID                                       
 left join tblAgentBalance tbla on tbla.BookingRef = HB.orderId  and  tbla.AgentNo = HB.RiyaAgentID             
 left join B2BMakepaymentCommission B2BMC on B2BMC.FkBookId=HB.pkId            
  left join B2BRegistration B2B on B2B.FKUserID=HB.RiyaAgentID            
 left join agentLogin AL on AL.UserID=B2B.FKUserID            
 left join mAgentGroup MAG on MAG.Id=AL.GroupId            
 left join Hotel_BookingGSTDetails gst on gst.PKID=HB.pkId or gst.OrderId=HB.orderId            
 left join Hotel_AttributesData HAT on HAT.FKBookId=HB.pkId            
where (HB.RiyaAgentID = @AgentId or (HB.MainAgentID = @MainAgentId and HB.MainAgentID > 0))                   
  and HB.BookingPortal in('TNH','TNHAPI')                     
  and HB.RiyaAgentID is not null                                                                                                             
  and ((Convert(date,HH.CreateDate) >= Convert(date,@FromDate) and Convert(date,HH.CreateDate) < @ToDate) or @FromDate='')                
            
  UNION            
            
   ---- Pending Condition--            
 select      
 DISTINCT  HB.BookingReference AS RIYAPNR,    
'Hotel' as ProductType,          
MAG.GroupName as GroupName,           
'' as TripID,                     
B2B.AgencyName as CorporateName,                
'Corporate' as CorporateType,                
'' as CorporateID,                
HB.PassengerEmail as EmployeeEmailID,                
HB.PassengerPhone as EmployeeMobileNo,                
'' as EmployeeCode,                
'' as TravellerType,           
'' as BookingType,                
HB.LeaderTitle as Title,                
HB.LeaderFirstName as FirstName,                
HB.LeaderLastName as LastName,                
HM.status AS Status,                  
'' as BookAppType,                
'' as StockType,                
HB.B2BPaymentMode as PaymentMode,                
'' as RequestedDate,                
'' as ApprovedDate,                
HH.CreateDate as BookedDate,                
'' as ApproveByOREApproverBookedBy,                
'' as BookedBy,                
HB.BookingCountry as CountryCode,                
'' as 'CountryName',                
--HB.cityName AS CityName,                
HB.HotelName as HotelName,                
ISNULL(HB.HotelAddress1,HB.HotelAddress2) AS 'Accommodation Address',                
HB.HotelIncludes +''+HB.Meal AS Inclusion,                  
HB.CheckInDate AS CheckInDate,                  
HB.CheckOutDate AS CheckOutDate,                
HB.CheckInTime as CheckInTime,                
HB.CheckOutTime AS CheckOutTime,                
HB.SelectedNights AS RoomNight,                
CASE WHEN HB.BookingCountry='IN' THEN 'Domestic' Else 'International' END  AS TravelScope,                
--HB.BookingReference AS RIYAPNR,                
ISNULL(HB.HotelConfNumber,'') as BookingRef,                
ISNULL(HB.providerConfirmationNumber,'') as GDSRef,                
'' as PassiveSegRef,                
'' AS RateType,                
HB.TotalRoomAmount as BaseFare,                
HB.HotelTaxes as TotalTax,                
0 as Markup,                
HB.AgentCommission as Discount,                
HB.agentCancellationCharges as Penalty,                
0 as CancellationMarkup,                
0 as Breakupoftaxes,                
bc.GSTAmount as GST,                
HB.AgentServiceFee as serviceFee,                
0 as GSTonSF,                
bc.TDSDeductedAmount as TDS,                
ISNULL(B2BMC.TotalCommission,0) as PGCharges,                
0 as GSTonPG,                
HB.agentCancellationCharges as CancelCharges,                
0 as RescheduleCharges,                
HB.STotalRate as NetAmount,                
hb.HotelTotalGross as GrossAmount,                
(cast(HB.DisplayDiscountRate as float) / cast(HB.SelectedNights as float)) as PerNightRate,                
'' as CappingLimit,          '' as  SuggestedLowestRate,                
'' as L1Hotel,                
'' as L1Rate,                
'' as L2Hotel,                
'' as L2Rate,                
'' as L3Hotel,                
'' as L3Rate,                
case           
when  ((ISNULL(HB.TotalRoomAmount,0)) - (isnull(HB.STotalRate,0) * (isnull(HB.ROEValue,0)) ) ) > 0 then ''           
when  ((ISNULL(HB.TotalRoomAmount,0)) - (isnull(HB.STotalRate,0) * (isnull(HB.ROEValue,0)) )) = 0  then 0          
else ((ISNULL(HB.TotalRoomAmount,0)) - (isnull(HB.STotalRate,0) * (isnull(HB.ROEValue,0)) ) )          
end as MissedSavings,                
hb.ROEValue as ROE,                
Isnull(HB.FinalROE,0) as ROECurrency,                
isnull(gst.GstNumber,'') as GSTNo,                
isnull(gst.Address,'') as GSTAddress,                
isnull(gst.EmailId,'') as GSTMailID,                
isnull(gst.MobileNo,'') as GSTPhoneNo,                
--case when HAT.AttributeId=4 Then HAT.AttributesValue Else '' END as CostCentre,             
''  as CostCentre,            
'' as DebitCostCenter,                
'' as ComplainceOrNonComplaince,                
'' as TravelPolicies,                
'' as ReferenceID,                
''  as 'Company code (Non-Billable)',                
'' as Durationoftravel,                
'' as EmployeeWorkingLocation,                
'' as Natureoftravel,                
'' as ProjectCode,                
'' as ReasonForNotSelectingLowestPreferredHotel,                
'' as RequestNo,                
'' as SAPCode,                
'' as LOCATIONCODE,                
'' as 'FUNCTION',                
'' as Activity,                
'' as DEPARTMENT,                
'' as SubDepartment,                
'' as JOBBAND,                
'' as LOCATION,                
'' as COSTCENTERDESCRIPTION,                
'' as CITY,                
'' as DEPARTMENTCODE,                
'' as SBUCODE,      
'' as CORPORATE,                
'' as VERTICALNAME,                
'' as ZONE,                
'' as BRANCH,                
'' as DIVISION,                
'' as BANDCODE,                
'' as title,                
'' as COMPANYCODE,          
'' as Changed_Cost_Centre,          
          
'' as FUSIONID,                
'' as BUSINESSUNIT,                
'' as COSTCODE,                
'' as COSTCENTER,                
'' as ENTITYCODE,                
'' as TRAVELCLASS,                
'' as GRADE,                
'' as STATE,                
'' as TravellerRemarks,                
'' as ApproverRemarks,                
'' as BookingRemarks,                
'' as DESIGNATION                
from Hotel_BookMaster HB   WITH (NOLOCK)              
 join Hotel_Status_History HH on HB.pkId = HH.FKHotelBookingId and  HH.FkStatusId=9            
 join Hotel_Status_Master HM on HH.FkStatusId = HM.Id            
left join Hotel_BookingGSTDetails gst on gst.PKID=HB.pkId or gst.OrderId=HB.orderId            
 left join B2BMakepaymentCommission B2BMC on B2BMC.FkBookId=HB.pkId            
  left join B2BHotel_Commission BC on BC.Fk_BookId = hb.pkId                                                                             
          
 --left join tblSelfBalance tbs on tbs.BookingRef = HB.orderId and tbs.UserID = HB.MainAgentID        
 --left join tblAgentBalance tbla on tbla.BookingRef = HB.orderId  and  tbla.AgentNo = HB.RiyaAgentID          
          
 left join B2BRegistration B2B on B2B.FKUserID=HB.RiyaAgentID            
 left join agentLogin AL on AL.UserID=B2B.FKUserID            
 left join mAgentGroup MAG on MAG.Id=AL.GroupId            
where (HB.RiyaAgentID = @AgentId or (HB.MainAgentID = @MainAgentId and HB.MainAgentID > 0))                                            
  and HB.BookingPortal in('TNH','TNHAPI')                     
  and HB.RiyaAgentID is not null                                                                                                                                               
  and ((Convert(date,HH.CreateDate) >= Convert(date,@FromDate) and Convert(date,HH.CreateDate) < @ToDate) or @FromDate='')                
  order by HH.CreateDate desc               
END 